(function(d){typeof define=="function"&&define.amd?define(d):d()})(function(){"use strict";class d{constructor(t){this.baseUrl=t.baseUrl,this.title=t.title,this.lang=t.lang,this.environment=t.environment,this.loggedIn=t.loggedIn,this.swapper=t.swapper,this.entry=t.entry}}const a=new d(window.Site);function s(e,t="log"){if(a.environment==="production"&&t!=="throw")return!1;switch(typeof e=="string"&&(e="Swapper - "+e),t){case"info":console.info(e);break;case"warn":console.warn(e);break;case"error":console.error(e);break;case"throw":throw e;default:console.log(e)}return!1}class p{constructor(){this.containerId=a.swapper.containerId,this.loadingLineId=a.swapper.loadingLineId,this.attributeName=a.swapper.attributeName}getContainer(){const t=document.getElementById(this.containerId);return t||s(`Could not find any valid containers with id "${this.containerId}"`,"throw")}getLoadingLine(){const t=document.getElementById(this.loadingLineId);return t||(s(`Could not find a valid loading line with id "${this.loadingLineId}"`,"info"),this.createLoadingLine())}createLoadingLine(){const t=document.createElement("div");return t.id=this.loadingLineId,t.style.display="none",document.body.insertBefore(t,document.body.firstChild),s(`New loading line div with id "${this.loadingLineId}" created.`,"info"),t}getButtons(t=null){let n,i=[],o=[],l=[];return t&&t instanceof HTMLElement?n=t.querySelectorAll("a"):n=document.querySelectorAll("a"),n.length===0&&s("Could not find any anchors!","warn"),n.forEach(r=>{r.hasAttribute(this.attributeName)?i.push(r):o.push(r),r.hasAttribute("href")||l.push(r)}),i.length===0&&s(`Could not find any buttons with attribute "${this.attributeName}"!`,"throw"),o.length>0&&(s(`Found buttons without attribute "${this.attributeName}" found!`,"warn"),s(o,"warn")),l.length>0&&(s("Found buttons without href attribute! This can be bad for indexing.","warn"),s(l,"warn")),i}}const c=new p;class g{constructor(){this.container=c.getContainer()}createEventsForButtons(t){t.forEach(n=>{this.setClickEventListener(n)})}setClickEventListener(t){t.addEventListener("click",n=>{if(n.preventDefault(),n.target){const i=this.getButtonAttributes(n.target);this.container.dispatchEvent(new CustomEvent("swclick",{detail:i,bubbles:!0,cancelable:!0,composed:!1}))}})}getButtonAttributes(t){var h;const n=t.dataset,i={};for(const u in n)n.hasOwnProperty(u)&&(i[u]=n[u]);const o=((h=i.page)==null?void 0:h.split("/"))||[],l=o.shift(),r=o;return i.page=l??"index",i.params=r??[],i}}const f=new g;class w{constructor(){this.loadingLine=c.getLoadingLine()}setContent(){this.loading()}loading(t=!0){t?this.loadingLine.style.display="block":this.loadingLine.style.display="none"}}class b{constructor(){this.entry=a.entry,this.container=c.getContainer(),this.buttons=c.getButtons(),this.requestHelper=new w}start(){this.entry||s("Could not find a valid entry!","throw"),f.createEventsForButtons(this.buttons),this.listen()}listen(){this.requestHelper.swapper=this,this.container.addEventListener("swclick",t=>{this.requestHelper.setContent()})}}class L{constructor(){new b().start()}}new L});
